[{"/home/jihyun/Desktop/DLS-TFB/src/index.js":"1","/home/jihyun/Desktop/DLS-TFB/src/reportWebVitals.js":"2","/home/jihyun/Desktop/DLS-TFB/src/App.js":"3","/home/jihyun/Desktop/DLS-TFB/src/pages/landingPage.js":"4","/home/jihyun/Desktop/DLS-TFB/src/contexts/AuthContext.js":"5","/home/jihyun/Desktop/DLS-TFB/src/utils/PublicRoute.js":"6","/home/jihyun/Desktop/DLS-TFB/src/pages/accountPage.js":"7","/home/jihyun/Desktop/DLS-TFB/src/utils/PrivateRoute.js":"8","/home/jihyun/Desktop/DLS-TFB/src/pages/login.js":"9","/home/jihyun/Desktop/DLS-TFB/src/pages/signup.js":"10","/home/jihyun/Desktop/DLS-TFB/src/pages/forgotPassword.js":"11","/home/jihyun/Desktop/DLS-TFB/src/pages/accountUpdate.js":"12","/home/jihyun/Desktop/DLS-TFB/src/pages/quizzesStagePage.js":"13","/home/jihyun/Desktop/DLS-TFB/src/pages/k3QuizOptionsPage.js":"14","/home/jihyun/Desktop/DLS-TFB/src/database/firebase.js":"15","/home/jihyun/Desktop/DLS-TFB/src/pages/MultipleChoicePage.js":"16","/home/jihyun/Desktop/DLS-TFB/src/pages/FlashCardPage.js":"17","/home/jihyun/Desktop/DLS-TFB/src/database/queries.js":"18","/home/jihyun/Desktop/DLS-TFB/src/styled-components/Form.js":"19","/home/jihyun/Desktop/DLS-TFB/src/styled-components/Cards.js":"20","/home/jihyun/Desktop/DLS-TFB/src/components/descriptionCard.js":"21","/home/jihyun/Desktop/DLS-TFB/src/components/resultCard.js":"22","/home/jihyun/Desktop/DLS-TFB/src/components/multipleChoice.js":"23","/home/jihyun/Desktop/DLS-TFB/src/components/flashCard.js":"24","/home/jihyun/Desktop/DLS-TFB/src/styled-components/Landig.js":"25"},{"size":500,"mtime":1610107477440,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1610107477440,"results":"28","hashOfConfig":"27"},{"size":1733,"mtime":1611098966241,"results":"29","hashOfConfig":"27"},{"size":543,"mtime":1611085376042,"results":"30","hashOfConfig":"27"},{"size":1963,"mtime":1610647816517,"results":"31","hashOfConfig":"27"},{"size":532,"mtime":1610737754910,"results":"32","hashOfConfig":"27"},{"size":922,"mtime":1610645225076,"results":"33","hashOfConfig":"27"},{"size":524,"mtime":1610640066750,"results":"34","hashOfConfig":"27"},{"size":1987,"mtime":1611101454939,"results":"35","hashOfConfig":"27"},{"size":2570,"mtime":1611101059553,"results":"36","hashOfConfig":"27"},{"size":1661,"mtime":1611081636097,"results":"37","hashOfConfig":"27"},{"size":2610,"mtime":1611100087944,"results":"38","hashOfConfig":"27"},{"size":700,"mtime":1610739779006,"results":"39","hashOfConfig":"27"},{"size":969,"mtime":1610729798164,"results":"40","hashOfConfig":"27"},{"size":626,"mtime":1610640066734,"results":"41","hashOfConfig":"27"},{"size":3135,"mtime":1610986659017,"results":"42","hashOfConfig":"27"},{"size":3180,"mtime":1610986659017,"results":"43","hashOfConfig":"27"},{"size":880,"mtime":1610986659013,"results":"44","hashOfConfig":"27"},{"size":1180,"mtime":1611100235665,"results":"45","hashOfConfig":"27"},{"size":1603,"mtime":1610729798168,"results":"46","hashOfConfig":"27"},{"size":761,"mtime":1610729798140,"results":"47","hashOfConfig":"27"},{"size":369,"mtime":1610986659013,"results":"48","hashOfConfig":"27"},{"size":1549,"mtime":1610986659013,"results":"49","hashOfConfig":"27"},{"size":1566,"mtime":1610986659013,"results":"50","hashOfConfig":"27"},{"size":607,"mtime":1611100413751,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"f1cfn2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/jihyun/Desktop/DLS-TFB/src/index.js",[],["108","109"],"/home/jihyun/Desktop/DLS-TFB/src/reportWebVitals.js",[],"/home/jihyun/Desktop/DLS-TFB/src/App.js",[],"/home/jihyun/Desktop/DLS-TFB/src/pages/landingPage.js",[],"/home/jihyun/Desktop/DLS-TFB/src/contexts/AuthContext.js",[],"/home/jihyun/Desktop/DLS-TFB/src/utils/PublicRoute.js",[],"/home/jihyun/Desktop/DLS-TFB/src/pages/accountPage.js",[],"/home/jihyun/Desktop/DLS-TFB/src/utils/PrivateRoute.js",[],"/home/jihyun/Desktop/DLS-TFB/src/pages/login.js",[],"/home/jihyun/Desktop/DLS-TFB/src/pages/signup.js",[],"/home/jihyun/Desktop/DLS-TFB/src/pages/forgotPassword.js",[],"/home/jihyun/Desktop/DLS-TFB/src/pages/accountUpdate.js",[],"/home/jihyun/Desktop/DLS-TFB/src/pages/quizzesStagePage.js",["110"],"import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function QuizPage() {\n  return (\n    <div>\n      <Link to=\"/k3/quiz-option\">\n        <div>KEY STAGE 3</div>\n      </Link>\n      <Link to=\"/k4/quiz-option\">\n        <div>KEY STAGE 4</div>\n      </Link>\n    </div>\n  );\n}\n\n//quizPge\n//k3:quiz-option\n//k3:multiple choice\n//k3:flash-card\n\n//{multiple-choice} = useParams();\n// {data ? (\n//     <>\n//       <h1>{data.question}</h1>\n//       <img src={data.image} alt=\"question img\" />\n//       {Object.keys(data.options[0]).map((e) => (\n//         <>\n//           <button>{e}</button>\n//           <br />\n//         </>\n//       ))}\n//     </>\n//   ) : null}\n","/home/jihyun/Desktop/DLS-TFB/src/pages/k3QuizOptionsPage.js",["111","112"],"import React, { useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport MultipleChoice from './MultipleChoicePage';\nimport FlashCardQuiz from './FlashCardPage';\n\nexport default function QuizOptionPage() {\n  const location = useLocation();\n  const [toggle, setToggle] = useState(false);\n  return (\n    <div>\n      <>\n        {!location.pathname.includes('multiple-choice') &&\n        !location.pathname.includes('flash-card') ? (\n          <>\n            <Link to=\"/k3/quiz-option/multiple-choice\">\n              <button>Multiple Choice Quiz</button>\n            </Link>\n            <Link to=\"/k3/quiz-option/flash-card\">\n              <button>Flash Cards Quiz </button>\n            </Link>{' '}\n          </>\n        ) : null}\n        {location.pathname.includes('multiple-choice') ? (\n          <MultipleChoice />\n        ) : null}\n        {location.pathname.includes('flash-card') ? <FlashCardQuiz /> : null}\n      </>\n    </div>\n  );\n}\n","/home/jihyun/Desktop/DLS-TFB/src/database/firebase.js",[],"/home/jihyun/Desktop/DLS-TFB/src/pages/MultipleChoicePage.js",["113"],"import React, { useEffect, useState } from 'react';\nimport {\n  QuestionBtn\n} from '../styled-components/Cards';\n\nimport { db } from './../database/firebase';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useAuth } from './../contexts/AuthContext';\nimport { updateScore } from './../database/queries';\n\nimport MultipleChoiceCard from './../components/multipleChoice';\nimport DescriptionCard from './../components/descriptionCard';\nimport ResultCard from './../components/resultCard';\n\nimport loser from './../images/loser.png';\nimport winner from './../images/winner.png';\n\nexport default function MultipleChoice() {\n\n  const { currentUser } = useAuth();\n\n  const [data, setData] = useState([]);\n  const [question, setQuestion] = useState(0);\n  const [colour, setColour] = useState('transparent');\n  const [toggle, setToggle] = useState(false);\n  const [answer, setAnswer] = useState();\n  const [win, setWin] = useState(true);\n  const [stage, setStage] = useState('key-stage-3');\n  const [timer,setTimer] = useState(false);\n\n  \nconst location = useLocation();\n\nif(stage && location.pathname.includes('k4') ){\n  setStage('key-stage-4')\n}\n\nlet docRef;\n\nif(stage){\n  docRef = db\n    .collection('Quizzes')\n    .doc(stage)\n    .collection('multiple-choice');\n}\n   \n\n  const collectionArr = [];\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimer(true);\n    }, 3000);\n\n    if(stage) {\n      docRef\n      .get()\n      .then((result) => {\n        return result.docs.forEach((doc) => {\n          collectionArr.push(doc.data());\n        });\n      })\n      .then(() => {\n        console.log('array', collectionArr);\n        return setData(collectionArr);\n      })\n      .catch((error) => console.log(error));}\n      return () => clearTimeout(timer);\n    }, []);\n    \n\n\n  return (\n    <div className=\"mc\">\n      {data[question] ? (\n        <>\n          {!toggle ? (\n           <MultipleChoiceCard\n           colour={colour}\n           data={data}\n           question={question}\n           setToggle={setToggle}\n           setColour={setColour}\n           setAnswer={setAnswer}\n           setWin={setWin}\n           />\n          ) : (\n            <DescriptionCard\n              background={colour}\n              answerObj={answer}\n              question={question}\n              setQuestion={setQuestion}\n              toggle={toggle}\n              setToggle={setToggle}\n              setColour={setColour}\n            />\n          )}\n        </>\n      ) : question > collectionArr.length - 1 ? (\n        win && timer ?  (\n          <ResultCard imgSrc={winner} text={'Congrats!! '}>\n\n          <Link to=\"/account\">\n          <QuestionBtn\n            onClick={() => {\n              updateScore(currentUser.uid);\n            }}\n            background={'#08302e'}\n          >\n            Click Here to Save progress !\n          </QuestionBtn>\n        </Link>\n          </ResultCard>\n        ) : !win && timer ?(          \n          <ResultCard imgSrc={loser} text={'Better luck next time!! '} ><Link to=\"/account\">Account</Link></ResultCard> \n        ):null\n      ) : (\n        'null'\n      )}\n    </div>\n  );\n}\n\n","/home/jihyun/Desktop/DLS-TFB/src/pages/FlashCardPage.js",["114"],"import React, { useState, useEffect } from 'react';\nimport { db } from './../database/firebase';\nimport { useAuth } from './../contexts/AuthContext';\nimport FlashCard from './../components/flashCard';\nimport {\n \n  QuestionBtn,\n\n} from './../styled-components/Cards';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport { updateScore } from './../database/queries';\n\nimport DescriptionCard from './../components/descriptionCard';\nimport ResultCard from './../components/resultCard';\n\nimport loser from './../images/loser.png';\nimport winner from './../images/winner.png';\n\nexport default function FlashCardQuiz() {\n\n  const { currentUser } = useAuth();\n\n  const [data, setData] = useState([]);\n  const [question, setQuestion] = useState(0);\n  const [colour, setColour] = useState('transparent');\n  const [toggle, setToggle] = useState(false);\n  const [answer, setAnswer] = useState();\n  const [win, setWin] = useState(true);\n  const [stage, setStage] = useState('key-stage-3');\n  const [timer,setTimer] = useState(false);\n\n  \nconst location = useLocation();\n\nif(stage && location.pathname.includes('k4') ){\n  setStage('key-stage-4')\n}\n\nlet docRef;\n\nif(stage){\n  docRef = db\n    .collection('Quizzes')\n    .doc(stage)\n    .collection('true-false');\n}\n   \n\n  const collectionArr = [];\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimer(true);\n    }, 3000);\n\n    if(stage) {\n      docRef\n      .get()\n      .then((result) => {\n        return result.docs.forEach((doc) => {\n          collectionArr.push(doc.data());\n        });\n      })\n      .then(() => {\n        console.log('array', collectionArr);\n        return setData(collectionArr);\n      })\n      .catch((error) => console.log(error));}\n      return () => clearTimeout(timer);\n    }, []);\n  return (\n    <div>\n      {data[question] ? \n       !toggle ?\n       <FlashCard \n              data={data} \n              question={question}  \n              setToggle={setToggle} \n              setAnswer={setAnswer} \n              setWin={setWin}\n              setColour={setColour} \n              colour={colour}\n              />\n       : <DescriptionCard\n              background={colour}\n              answerObj={answer}\n              question={question}\n              setQuestion={setQuestion}\n              toggle={toggle}\n              setToggle={setToggle}\n              setColour={setColour}\n            />\n             :  question > collectionArr.length - 1 ? (\n              win && timer ?  (\n                <ResultCard imgSrc={winner} text={'Congrats!! '}>\n      \n                <Link to=\"/account\">\n                <QuestionBtn\n                  onClick={() => {\n                    updateScore(currentUser.uid);\n                  }}\n                  background={'#08302e'}\n                >\n                  Click Here to Save progress !\n                </QuestionBtn>\n              </Link>\n                </ResultCard>\n              ) : !win && timer ?(          \n                <ResultCard imgSrc={loser} text={'Better luck next time!! '} ><Link to=\"/account\">Account</Link></ResultCard> \n              ):null\n            ) : (\n              'null'\n            )}\n    </div>\n  );\n}\n","/home/jihyun/Desktop/DLS-TFB/src/database/queries.js",[],"/home/jihyun/Desktop/DLS-TFB/src/styled-components/Form.js",[],"/home/jihyun/Desktop/DLS-TFB/src/styled-components/Cards.js",[],"/home/jihyun/Desktop/DLS-TFB/src/components/descriptionCard.js",[],"/home/jihyun/Desktop/DLS-TFB/src/components/resultCard.js",[],"/home/jihyun/Desktop/DLS-TFB/src/components/multipleChoice.js",[],"/home/jihyun/Desktop/DLS-TFB/src/components/flashCard.js",[],["115","116"],"/home/jihyun/Desktop/DLS-TFB/src/styled-components/Landig.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":2,"column":16,"nodeType":"123","messageId":"124","endLine":2,"endColumn":26},{"ruleId":"121","severity":1,"message":"125","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":16},{"ruleId":"121","severity":1,"message":"126","line":8,"column":18,"nodeType":"123","messageId":"124","endLine":8,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":69,"column":8,"nodeType":"129","endLine":69,"endColumn":10,"suggestions":"130"},{"ruleId":"127","severity":1,"message":"128","line":71,"column":8,"nodeType":"129","endLine":71,"endColumn":10,"suggestions":"131"},{"ruleId":"117","replacedBy":"132"},{"ruleId":"119","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'collectionArr', 'docRef', and 'stage'. Either include them or remove the dependency array.","ArrayExpression",["136"],["137"],["134"],["135"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"138","fix":"140"},"Update the dependencies array to be: [collectionArr, docRef, stage]",{"range":"141","text":"142"},{"range":"143","text":"142"},[1784,1786],"[collectionArr, docRef, stage]",[1770,1772]]